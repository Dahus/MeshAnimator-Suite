{
  "shaderCode": {
    "ImmutableCode0": [
      "Shader \"Custom/PixelatedColorShader\"",
      "{",
      "    Properties",
      "    {"
    ],
    "PropertiesHeight": [
      "        _Height (\"Height (in pixels)\", Float) = 42"
    ],
    "PropertiesWidth": [
      "        _Width (\"Width (in pixels)\", Float) = 42"
    ],
    "PropertiesValues": [
      "        _x0y0(\"x0y0\", Range(0, 1)) = 1"
    ],
    "ImmutableCode1": [
      "    }",
      "",
      "    SubShader",
      "    {",
      "        Tags { \"RenderType\"=\"Opaque\" }",
      "        LOD 100",
      "",
      "        Pass",
      "        {",
      "            CGPROGRAM",
      "            #pragma vertex vert",
      "            #pragma fragment frag",
      "",
      "            #include \"UnityCG.cginc\"",
      "",
      "            struct appdata_t",
      "            {",
      "                float4 vertex : POSITION;",
      "                float2 uv : TEXCOORD0;",
      "            };",
      "",
      "            struct v2f",
      "            {",
      "                float2 uv : TEXCOORD0;",
      "                float4 vertex : SV_POSITION;",
      "            };",
      "",
      "            float _Height;",
      "            float _Width;"
    ],
    "SubShader": [
      "            float _x0y0;"
    ],
    "ImmutableCode2": [
      "",
      "            v2f vert (appdata_t v)",
      "            {",
      "                v2f o;",
      "                o.vertex = UnityObjectToClipPos(v.vertex);",
      "                o.uv = v.uv;",
      "                return o;",
      "            }",
      "",
      "            fixed4 frag (v2f i) : SV_Target",
      "            {",
      "                float2 pixelSize = float2(1.0 / _Width, 1.0 / _Height);",
      "",
      "                float2 pixelUV = floor(i.uv / pixelSize) * pixelSize;",
      "",
      "                int xIndex = int(pixelUV.x * _Width);",
      "                int yIndex = int(pixelUV.y * _Height);",
      "                int index = yIndex * int(_Width) + xIndex;",
      "",
      "                float colorValue = 1;"
    ],
    "CycleValues": [
      "                if (index == 0)",
      "                {",
      "                    colorValue = _x0y0;",
      "                }"
    ],
    "ImmutableCode3": [
      "",
      "                fixed4 color = fixed4(colorValue, colorValue, colorValue, 1);",
      "",
      "                return color;",
      "            }",
      "            ENDCG",
      "        }",
      "    }",
      "    FallBack \"Diffuse\"",
      "}"
    ]
  }
}
